name: TTbar

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  #workflow_run:
  #  workflows: ["Linting"]
  #  types:
  #    - completed

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    defaults:
      run:
        shell: "bash -l {0}"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: btv_nano_commissioning

    - name: Install Dependencies
    #Â might not be needed for local tests
      run: |
        conda info
        pip install git+https://github.com/CoffeaTeam/coffea.git
        conda install -c conda-forge voms
        # conda install -c conda-forge voms-clients 
        conda install -c conda-forge xrootd
        conda install -c conda-forge ca-certificates
        conda install -c conda-forge ca-policy-lcg
        conda install -c conda-forge dask-jobqueue
        conda install -c anaconda bokeh 
        conda install -c conda-forge 'fsspec>=0.3.3'
        conda install dask
        pip install -e .
        conda list

    - name: Setting up grid proxy
    # https://awesome-workshop.github.io/gitlab-cms/03-vomsproxy/index.html
      run: |
        mkdir -p ${HOME}/.globus
        printf "${{ secrets.GRID_USERCERT }}" | base64 -d > ${HOME}/.globus/usercert.pem
        printf "${{ secrets.GRID_USERKEY }}" | base64 -d > ${HOME}/.globus/userkey.pem
        ls ${HOME}/.globus/
        chmod 400 ${HOME}/.globus/userkey.pem
        # touch ${HOME}/.rnd
        echo "Running voms-proxy-init"
        #printf "${{secrets.GRID_PASSWORD}}" | base64 -d | voms-proxy-init --voms cms --pwstdin
        echo "${{secrets.GRID_PASSWORD}}" | voms-proxy-init --voms cms --pwstdin
        echo "voms-proxy-init ran succesfully"
        voms-proxy-info --all

    - name: Run workflow
      run: |
        python runner.py --workflow ttcom --json metadata/test.json  --limit 1 --only TTToSemiLeptonic_TuneCP5_13TeV-powheg-pythia8

